# -*- coding:utf-8 -*-
# @Desc : 
# @Author : Administrator
# @Date : 2018-12-15 14:26

MongoDB非关系型数据库:[默认端口号27017]
    下载地址:https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2012plus-4.1.6-signed.msi
    下载地址:https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2012plus-4.1.6.zip
    MongoDB可视化工具:https://download.robomongo.org/1.2.1/windows/robo3t-1.2.1-windows-x86_64-3e50a65.zip
    配置环境变量path: D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\bin;
    MongoDB安装根目录下需要创建两个目录:
        数据库目录: mongodb-win32-x86_64-2008plus-ssl-3.6.9\data\db
        日志文件目录: mongodb-win32-x86_64-2008plus-ssl-3.6.9\data\log
    1.启动MongoDB数据库:
        第一种cmd命令行下启动MongoDB数据库: mongod.exe --dbpath=D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\data\db
        第二种使用脚本快速启动MongoDB数据库: 在安装根目录下新建start.bat文件,并在文件中添加以下内容
            D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\bin\mongod.exe --dbpath=D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\data\db
    2.链接MongoDB服务: 注意: 不要关闭启动数据库的命令行窗口
        cmd命令行下执行: mongo.exe
    3.Windows中安装安装MnngoDB服务:
        配置MongoDB服务:在安装根目录下创建文件: mongod.cfg 其中指定两个参数systemLog.path 和 storage.dbPath参数
            systemLog:
                destination: file
                path: D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\data\log\mongod.log
            storage:
                dbPath: D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\data\db
        安装MOngoDB服务:打开一个cmd窗口执行以下命令:
            mongod.exe --config "D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\mongod.cfg" --install
    # 以后就可以方便快捷的使用MongoDB:
        启动服务：net start MongoDB
        关闭服务：net stop MongoDB
        删除服务：D:\InstallationOther\mongodb-win32-x86_64-2008plus-ssl-3.6.9\bin\mongod.exe --remove

    启动MongoDB服务后使用可视化工具链接: 如 robo3t-1.2.1-windows-x86_64-3e50a65.zip

    # MongoDB数据库的操作:
        查看所有数据库: show dbs
        创建/切换数据库: use 数据库名称
        删除数据库: db.dropDatabase()   # 注: 删除数据库之前首先你已进入数据库(use 数据库名称)
        查看当前正在使用的数据库: db 或者 db.getName()
        断开数据库连接: exit
    # MongoDB数据库集合操作:(即表的操作)
        创建集合的两种方式:
            第一种: db.createCollection("集合名称")    如：db.createCollection("student")
            第二种: db.集合名称.insert(文档)    如：db.student.insert({name:"zhangsan",age:19,address:"上海"})
        注: 前者创建了一个空的集合，后者创建了一个空的集合并添加了一个文档(即表数据)
        删除当前数据库中的集合(即表): db.集合名称.drop()    如：db.student.drop()
        查看当前数据库中的集合(即表): show tables
    # MongoDB数据库文档操作:(即表中数据的操作[CRUD增删改查])
        inster()方法插入文档(即数据): db.集合名称.insert(文档) 或 db.集合名称.insert([文档1,文档2,....])
            如：插入一个文档：db.student.insert({name:"zhangsan",age:19,address:"上海"})
            如：插入多个文档：db.student.insert([{name:"lisi2",age:12,address:"河"},{name:"wangwu",age:30,address:"天津"}])
        save()方法插入文档(即数据): db.集合名称.save(文档)
        说明：如果不指定_id字段，save()方法类似于insert()方法，如果指定_id字段，则会更新该_id字段的数据
            如: db.student.save({name:"liuliu",age:25,address:"666"})
            如: db.student.save({_id:ObjectId("5af003107a4440acc28674e6"),name:"777",age:777,address:"777"})
        update()方法更新已经存在的文档(即数据): db.集合名称.update(文档)
            如: db.student.update({name:"liuliu"},{age:25})  # 把数据name属性与值更新为只有age属性与值
            如：更新一条: db.student.update({name:"liuliu"},{$set:{age:25}})
            如：更新多条：db.student.update({name:"liuliu"},{$set:{age:25}},{multi:true})
            如：累加：db.student.update({name:"liuliu"},{$inc:{age:25}})
        remove()方法删除文档(即数据): db.集合名称.remove()
            示例：db.student.remove({name:"zhangsan"}) # 删除所有name属性值为zhangsan的数据
            示例：db.student.remove({name:"zhangsan"},{justOne:true})  # justOne为true或1时,只删除一条文档(数据)
        find()方法查询集合(即表)中所有的文档（即数据）：db.集合名称.find()
            如：db.student.find()  # 查询所有数据
            如: db.student.findOne({name:"liuliu"})  # 查询匹配条件的第一条数据
            如: db.student.find().pretty()
        条件查询运算符:
            --->大于：$gt  语法：db.集合名称.find({<key>:{$gt:<value>}})
            示例：db.student.find({age:{$gt:25}})
            --->大于等于：$gte   语法：db.集合名称.find({<key>:{$gte:<value>}})
            示例：db.student.find({age:{$gte:25}})
            --->小于：$lt  语法：db.集合名称.find({<key>:{$lt:<value>}})
            示例：db.student.find({age:{$lt:25}})
            --->小于等于：$lte   语法：db.集合名称.find({<key>:{$lte:<value>}})
            示例：db.student.find({age:{$lte:25}})
            --->大于等于 和 小于等于：$gte 和 $lte 语法：db.集合名称.find({<key>:{$gte:<value>,$lte:<value>}})
            示例：db.student.find({age:{$gte:20,$lte:27}})
            --->等于：语法：db.集合名称.find({<key>:<value>})
            示例：db.student.find({age:777})
            --->使用_id进行查询：  语法：db.集合名称.find({"_id":ObjectId("id值")})
            示例：db.student.find({"_id":ObjectId("5af1072e8fdd1b19e8a4d149")})
            --->查询某个结果集的数据条数：count()
            示例：db.student.find().count()
            --->查询某个字段的值当中是否包含另一个值：
            示例：db.student.find({name:/en/})
            --->查询某个字段的值是否以另一个值开头：
            示例：db.student.find({name:/^en/})
        limit() 和 skip()：
            --->limit()：读取指定数量的数据记录
            示例：db.student.find().limit(2)
            --->skip()：读取跳过指定数量的数据记录
            示例：db.student.find().skip(3)
            --->skip() 与 limit() 联合使用：通常用这种方式实现分页功能：
            示例：第一次：db.student.find().skip(3).limit(3)
            示例：第二次：db.student.find().skip(6).limit(3)
        排序：sort()   语法：db.集合名称.find({<key>:<value>}).sort({<key>:1|-1})
            示例：按照年龄升序：db.student.find().sort({age:1})
            示例：按照年龄降序：db.student.find().sort({age:-1})


